[project]
name = "flask-realworld-example-app"
dynamic = ["version"]
description = "Datadog Flask Real World example"
readme = "README.md"
license = { text = "LICENSE.BSD3" }
requires-python = ">=3.7"
authors = [
    { name = "Datadog, Inc.", email = "dev@datadoghq.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
"Bug Tracker" = "https://github.com/DataDog/flask-realworld-example-app/issues"
Changelog = "https://github.com/DataDog/flask-realworld-example-app/releases"
Documentation = "https://ddtrace.readthedocs.io/en/stable/"
Homepage = "https://github.com/DataDog/flask-realworld-example-app"
"Source Code" = "https://github.com/DataDog/flask-realworld-example-app/"


[tool.black]
line-length = 120
target_version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312']
include = '''\.py[ix]?$'''
exclude = '''
(
  .venv*
  | \.riot/
  | \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build/
  | buck-out/
  | build/
  | dist/
)
'''

[tool.pyright]
exclude = [
  "**/__pycache__",
  ".git",
  ".ddriot",
  ".ddtox",
  ".riot",
  ".tox",
  ".venv",
]


[tool.bandit]
targets = ["ddtrace/"]

[tool.ruff]
exclude = [
    ".riot",
    ".ddriot",
    ".venv*",
    ".git",
    "__pycache__",
    ".eggs",
    "*.egg",
    "build",
    "ddtrace/__init__.py",
    "ddtrace/vendor/*",
    "ddtrace/appsec/_iast/_taint_tracking/_vendor/*",
    "ddtrace/profiling/exporter/pprof_*pb2.py",
    "tests/profiling/simple_program_gevent.py",
    "tests/contrib/grpc/hello_pb2.py",
    "tests/contrib/django_celery/app/*",
    "tests/contrib/protobuf/schemas/**/*.py",
    "tests/appsec/iast/fixtures/ast/str/non_utf8_content.py",
    "tests/appsec/iast/fixtures/aspects/str/non_utf8_content.py",
    "tests/lib-injection/dd-lib-python-init-test-protobuf-old/addressbook_pb2.py"
]
ignore = [
    "A003",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D202",
    "D204",
    "D205",
    "D208",
    "D210",
    "D300",
    "D400",
    "D401",
    "D403",
    "D404",
    "D413",
    "E203",
    "E231",
    "E721",
    "G201",
]
line-length = 120
select = [
    "A",
    "D",
    "E",
    "F",
    "G",
    "I",
    "W",
]

[tool.ruff.pydocstyle]
convention = "pep257"

[tool.ruff.isort]
force-single-line = true
lines-after-imports = 2
force-sort-within-sections = true
known-first-party = [ "ddtrace" ]
relative-imports-order = "furthest-to-closest"

[tool.ruff.per-file-ignores]
# Exclude typing stubs as vertical line spacing incompatibility with black
# See: https://github.com/astral-sh/ruff/pull/6501
"*.pyi" = ["I001"]

[tool.ruff.lint]
# Do not auto-fix unused imports (as this deletes things like import ddtrace)
unfixable = ["F401"]
